/// <reference types="openlayers" />
import { OnDestroy, OnInit, EventEmitter } from '@angular/core';
import { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';
import { MapComponent } from '../map.component';
import * as ɵngcc0 from '@angular/core';
export declare class ModifyInteractionComponent implements OnInit, OnDestroy {
    private map;
    instance: interaction.Modify;
    condition?: EventsConditionType;
    deleteCondition?: EventsConditionType;
    pixelTolerance?: number;
    style?: (style.Style | style.Style[] | StyleFunction);
    features: Collection<Feature>;
    wrapX?: boolean;
    source?: source.Vector;
    onModifyEnd: EventEmitter<interaction.Modify.Event>;
    onModifyStart: EventEmitter<interaction.Modify.Event>;
    onChange: EventEmitter<interaction.Modify.Event>;
    onChangeActive: EventEmitter<interaction.Modify.Event>;
    onPropertyChange: EventEmitter<interaction.Modify.Event>;
    constructor(map: MapComponent);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModifyInteractionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ModifyInteractionComponent, "aol-interaction-modify", never, { "condition": "condition"; "deleteCondition": "deleteCondition"; "pixelTolerance": "pixelTolerance"; "style": "style"; "features": "features"; "wrapX": "wrapX"; "source": "source"; }, { "onModifyEnd": "onModifyEnd"; "onModifyStart": "onModifyStart"; "onChange": "onChange"; "onChangeActive": "onChangeActive"; "onPropertyChange": "onPropertyChange"; }, never, never>;
}

//# sourceMappingURL=modify.component.d.ts.map