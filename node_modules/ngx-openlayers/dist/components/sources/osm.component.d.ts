/// <reference types="openlayers" />
import { AfterContentInit } from '@angular/core';
import { source, AttributionLike, TileLoadFunctionType } from 'openlayers';
import { LayerTileComponent } from '../layers';
import { SourceXYZComponent } from './xyz.component';
import { SourceRasterComponent } from './raster.component';
import * as ɵngcc0 from '@angular/core';
export declare class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {
    instance: source.OSM;
    attributions: AttributionLike;
    cacheSize: number;
    crossOrigin: string;
    maxZoom: number;
    opaque: boolean;
    reprojectionErrorThreshold: number;
    tileLoadFunction: TileLoadFunctionType;
    url: string;
    wrapX: boolean;
    constructor(layer: LayerTileComponent, raster?: SourceRasterComponent);
    ngAfterContentInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SourceOsmComponent, [{ optional: true; host: true; }, { optional: true; host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SourceOsmComponent, "aol-source-osm", never, { "attributions": "attributions"; "cacheSize": "cacheSize"; "crossOrigin": "crossOrigin"; "maxZoom": "maxZoom"; "opaque": "opaque"; "reprojectionErrorThreshold": "reprojectionErrorThreshold"; "tileLoadFunction": "tileLoadFunction"; "url": "url"; "wrapX": "wrapX"; }, {}, never, never>;
}

//# sourceMappingURL=osm.component.d.ts.map